<!DOCTYPE html>
<html>

<head>
    <title>Kaydedilen Konumları ve Bilgileri Göster</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <link rel="stylesheet" href="/css/mapstyles.css" /> <!-- CSS dosyanızı bağlayın -->
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
</head>

<body>
    <!-- Sidebar -->
    <button class="toggle-btn" id="toggle-btn">☰</button>
    <div class="sidebar" id="sidebar">
        <h2>Menü</h2>
        <ul>
            <li><a href="http://localhost:3000/home">Ana Sayfa</a></li>
            <li><a href="http://localhost:3000/location">Konum Ekle</a></li>
            <li><a href="http://localhost:3000/show-locations">Haritayı Göster</a></li>
            <li><a href="http://localhost:3000/about">Hakkında</a></li>
        </ul>
    </div>

    <!-- Content -->
    <div class="content" id="content">
        <h1>Harita Görüntüleme Sistemi</h1>
        <div class="description">
            Bu sayfa, kaydedilen konumları ve ilgili bilgileri bir harita üzerinde görüntülemek için tasarlanmıştır. 
            Aşağıda bulunan haritayı keşfederek farklı konumlar hakkında bilgi alabilirsiniz.
        </div>
        <div id="map"></div>
    </div>

    <!-- Footer -->
    <footer>
        © 2024 ResQMap - Tüm hakları saklıdır.
    </footer>

    <script>
        // Leaflet Haritası
        var map = L.map('map').setView([39.92077, 32.85411], 6);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '© OpenStreetMap contributors'
        }).addTo(map);

        fetch('/get-locations')
            .then(response => response.json())
            .then(locations => {
                locations.forEach(location => {
                    var marker = L.marker([location.latitude, location.longitude]).addTo(map);
                    if (location.info) {
                        marker.bindPopup(location.info);
                    }
                });
            })
            .catch(error => console.log('Error:', error));

        // Sidebar Aç/Kapat İşlevi
        const toggleBtn = document.getElementById('toggle-btn');
        const sidebar = document.getElementById('sidebar');
        const content = document.getElementById('content');

        toggleBtn.addEventListener('click', () => {
            sidebar.classList.toggle('collapsed');
            content.classList.toggle('expanded');
            
            // Harita boyutunu yeniden hesapla
            setTimeout(() => {
                map.invalidateSize();
            }, 300);
        });
    </script>

<script src='https://cdn.jotfor.ms/s/umd/latest/for-embedded-agent.js'></script>
<script>
  window.addEventListener("DOMContentLoaded", function() {
    window.AgentInitializer.init({
      agentRenderURL: "https://agent.jotform.com/01955301313c77eba586053eb747c3f6d40a",
      rootId: "JotformAgent-01955301313c77eba586053eb747c3f6d40a",
      formID: "01955301313c77eba586053eb747c3f6d40a",
      queryParams: ["skipWelcome=1", "maximizable=1"],
      isDraggable: false,
      background: "linear-gradient(180deg, #6C73A8 0%, #6C73A8 100%)",
      buttonBackgroundColor: "#0066C3",
      buttonIconColor: "#FFFFFF",
      variant: false,
      customizations: {
        "greeting": "Yes",
        "greetingMessage": "Merhaba! Nasıl yardımcı olabilirim?",
        "openByDefault": "No",
        "pulse": "No",
        "position": "right",
        "autoOpenChatIn": "0"
      },
      isVoice: undefined
    });
  });
</script>
</body>

</html>
